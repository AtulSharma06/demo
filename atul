
@Repository
public interface YourEntityRepository extends JpaRepository<YourEntity, Long> {
}
@Service
public class YourService {

    @Autowired
    private YourEntityRepository yourEntityRepository;

    public void updateColumn(Long id, String newValue) {
        Optional<YourEntity> optionalEntity = yourEntityRepository.findById(id);
        
        if (optionalEntity.isPresent()) {
            YourEntity entity = optionalEntity.get();
            entity.setColumnName(newValue); // Set the new value for the column you want to update
            yourEntityRepository.save(entity); // Save the updated entity
        } else {
            // Handle the case when the entity with the given ID is not found
        }
    }
}
@RestController
@RequestMapping("/your-entity")
public class YourController {

    @Autowired
    private YourService yourService;

    @PutMapping("/{id}")
    public ResponseEntity<String> updateColumn(@PathVariable Long id, @RequestParam String newValue) {
        try {
            yourService.updateColumn(id, newValue);
            return ResponseEntity.ok("Column updated successfully.");
        } catch (Exception e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Failed to update column.");
        }
    }
}
